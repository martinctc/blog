I"><section class="main-content">
<div id="a-favourite-r-package" class="section level3">
<h3>A favourite R package?</h3>
<p>Whenever I‚Äôm asked the question of what my <em>favourite</em> R package is, I often go through this reasoning: <a href="https://www.tidyverse.org/">tidyverse</a> packages, such as <a href="https://dplyr.tidyverse.org/">dplyr</a> and <a href="https://tidyr.tidyverse.org/">tidyr</a>, are what I‚Äôd call ‚Äúessentials‚Äù i.e.¬†packages that I would always load for almost every piece of analysis in R. I love tidyverse, but when we are talking about a <em>favourite</em> package, they do not feel quite like the right candidates. The reason is because tidyverse packages are so intrinsic to my personal routine of using R that it‚Äôs almost like saying ‚ÄúWater is my favourite drink because I can‚Äôt live without it.‚Äù Plus, answering that tidyverse is my favourite package feels like I‚Äôm not putting much of an effort in the answer at all! üòÑ</p>
<p><img src="http://localhost:4000/blog\images\one-does-not-simply-pick-a-favourite-r-package.jpg" width="40%" style="float:right; padding:10px" /></p>
<p>Other candidates include useful ‚Äúspecialist‚Äù packages<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>, such as <a href="https://github.com/juliasilge/tidytext">tidytext</a> and <a href="http://tm.r-forge.r-project.org/">tm</a> for text mining, <a href="https://github.com/ardata-fr/mschart">mschart</a> and <a href="https://davidgohel.github.io/officer/">officer</a> for manipulating Office documents, as well as <a href="https://rstudio.github.io/shinydashboard/">shinydashboard</a> and <a href="https://github.com/rstudio/flexdashboard">flexdashboard</a> for creating either dynamic or static dashboard outputs. But that doesn‚Äôt make the decision easy either - I love how each of these packages work so well for the purpose that they are designed for, and most of these are very well-maintained, documented, with plenty of vignettes (some have entire books written around the package - see <a href="https://www.tidytextmining.com/">tidytext</a>) for users to follow through examples. You can‚Äôt compare them based on ‚Äúvalue added‚Äù either, as the value they add to a workflow does depend entirely on what you are trying to achieve in an analysis or output.</p>
<p>The final approach that I usually take is what one could describe as a test on <em>emotive impact</em> i.e. <em>which package, in my experience of learning to do things with R, made the largest impression on me?</em></p>
<blockquote>
<p>Which package, in my experience of learning to do things with R, made the largest impression on me?</p>
</blockquote>
<p>Now, this question is much easier to answer, firstly because the criteria are relaxed on the performance, quality, and the use-value of the package, and secondly the focus is more around my personal experience with the package in the past.</p>
</div>
<div id="rqda---qualitative-data-analysis-in-r" class="section level3">
<h3>RQDA - Qualitative Data Analysis in R</h3>
<p>The first answer that comes to mind is a package written by Huang Ronggui called <a href="https://github.com/Ronggui/RQDA">RQDA</a>, which stands for <em>R-based Qualitative Data Analysis</em>. In my previous life working in market research, I had worked on a number of qualitative projects which involved conducting semi-structured interviews with customers. These interviews tend to be fairly open-ended conversations lasting from half an hour to two hours, and are importantly different from <strong>surveys</strong> because there are no pre-set answers to select from or even questions. As a moderator, you are supposed to allow a conversation to develop naturally, and steer it in a way through prompts so that it helps you understand the motivations and the experience of customer journeys.</p>
<p>From a data point-of-view, the output of these interviews come through as text transcripts (created from audio recordings) - effectively, as large bodies of unstructured text saved in Word documents. The data analyst‚Äôs instinct is perhaps to run some form of word or n-gram frequency analysis, but this often fails to uncover or capture the valuable themes or contextual information that researchers are looking after. Traditionally, market researchers analyse qualitative data in a manual, not-so-systematic approach - by reading through the transcripts, highlighting themes and quotes, and almost through ‚Äòmental impression‚Äô piece together a narrative or a set of implications that arise from the analysis. It almost goes without saying that this approach isn‚Äôt ideal either, as it is unscalable, prone to human error, excessively reliant on human memory, and does not lend itself to collaborative analysis.</p>
<p><img src="http://localhost:4000/blog\images\rqda-gui.PNG" width="40%" style="float:right; padding:10px" /></p>
<p>Enter RQDA: a package that combines the benefits of human interpretation and systematic, computer-assisted analysis. When you run <code>library(RQDA)</code>, the package launches a GUI (using RGtk2) that allows you to import text files and manually highlight and classify chunks of text into themes (which is what market researchers do anyway when highlighting Word documents).</p>
<p>What‚Äôs amazing about RQDA is that it generates a SQLite database in the back-end (as an RQDA object), which you can then query with SQL (using <a href="https://github.com/r-dbi/RSQLite/">RSQlite</a>) to answer questions like the co-occurence of themes from an interview, or whether certain themes come up more often when a respondent is a millennial versus an ‚Äúempty-nest‚Äù pensioner. If you do choose to run any form of text analytics, the enables you to get much further as the thematic analysis covers off any contextual and nuanced information that a straight text mining exercise wouldn‚Äôt likely to have been able to capture. Even if you don‚Äôt run any text analytics, RQDA already improves on the ‚Äòinformal‚Äô method of analysis by having all the quotes, themes, and classification of respondents organised in a very accessible structure. For instance, you can very easily check whether your narrative makes sense by identifying the quotes that relate to a certain theme.</p>
<p>Other nifty features of the RQDA package include: - Export coded / marked-up transcripts as HTML - Export all codings / marked-up text as HTML - Automated coding through keyword match, e.g.¬†if the paragraph contains ‚Äúdietician‚Äù, code to the theme ‚ÄúReference to dietician‚Äù</p>
<p>Here are some code snippets that I‚Äôve used in the past, which became very handy:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># Extract the full transcript from the SQLite database</span>
<span class="kw">RQDAQuery</span>(<span class="dt">sql=</span><span class="st">&quot;SELECT name, file FROM source&quot;</span>)
</code></pre></div></div></section>
:ET